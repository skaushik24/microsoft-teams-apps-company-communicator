name: Build and deploy TechUnicorn App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: üßæ Checkout code
        uses: actions/checkout@v3

      - name: üõ†Ô∏è Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: üß± Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: ‚öõÔ∏è Build React frontend
        working-directory: Source/CompanyCommunicator/ClientApp
        run: |
          npm install
          npm run build

      - name: üìÅ Copy React build to wwwroot
        # This step places the React build into the wwwroot folder within your .NET project structure.
        run: |
          $wwwrootPath = "Source/CompanyCommunicator/wwwroot"
          if (Test-Path $wwwrootPath) {
            Remove-Item -Recurse -Force $wwwrootPath
          }
          New-Item -ItemType Directory -Path $wwwrootPath
          Copy-Item -Path Source/CompanyCommunicator/ClientApp/build/* -Destination $wwwrootPath -Recurse -Force

      - name: üî® Publish .NET project
        # Publishes the .NET project, including the wwwroot copied in the previous step.
        working-directory: Source/CompanyCommunicator
        run: dotnet publish Microsoft.Teams.Apps.CompanyCommunicator.csproj -c Release -o ./output

      - name: üß© Copy React into publish output (Redundant but safe check)
        # This step ensures that even if dotnet publish didn't fully include wwwroot,
        # the React build is explicitly copied into the final output directory.
        run: |
          $src = "Source/CompanyCommunicator/wwwroot"
          $dst = "Source/CompanyCommunicator/output/wwwroot"
          if (-Not (Test-Path $dst)) {
            New-Item -ItemType Directory -Path $dst
          }
          Remove-Item -Recurse -Force "$dst\*" -ErrorAction SilentlyContinue
          Copy-Item -Path "$src\*" -Destination $dst -Recurse -Force

      - name: üîç Check contents before zipping
        # Debugging step to verify the contents of the 'output' directory before zipping.
        run: Get-ChildItem -Path Source/CompanyCommunicator/output -Recurse

      - name: üì¶ Create deployable ZIP
        # CRITICAL CHANGE: Zip the *contents* of the 'output' directory.
        # This ensures 'wwwroot' and other app files are at the root of the zip,
        # which is expected by Azure Web Apps.
        working-directory: Source/CompanyCommunicator/output
        run: Compress-Archive -Path * -DestinationPath ../../publish.zip -Force

      - name: üöÄ Deploy to Azure Web App
        # Deploys the created publish.zip to your Azure Web App.
        uses: azure/webapps-deploy@v2
        with:
          app-name: TechUnicorn-Communicator
          package: Source/publish.zip
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
